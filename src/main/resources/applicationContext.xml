<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" default-autowire="byName"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 扫描service注解 -->
	<context:component-scan base-package="service">
		<!-- 排除controller的注解，在spring-mvc中扫描，不走本xml文件中的bean -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 加载jdbc.properties等相同类型的属性文件 -->
	 <bean id="propertyConfigurer"
	    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="location" value="classpath:jdbc.properties"/>
	 </bean>
	  
	<!-- 配置mybatis中的SqlSessionFactory，交由Spring管理，即类SqlSessionFactoryBean的实例管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<!-- reference指向，引用，指针 -->
	 	<!-- 该类中的数据源属性信息————引用一个bean -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 加载mapper文件，需要读取的mybatis的配置信息 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 或者直接mapper信息，另外一种配置方法 ，需省略mybatis配置文件的引入-->
		<!-- <property ...../> -->
	</bean>

	<!-- 配置dataSource数据源 -->
	  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="${driver}"/>
	    <property name="url" value="${url}"/>
	    <property name="username" value="${username}"/>
	    <property name="password" value="${password}"/>
	    <!-- 初始化连接大小 -->
	    <property name="initialSize" value="${initialSize}"></property>
	    <!-- 连接池最大数量 -->
	    <property name="maxActive" value="${maxActive}"></property>
	    <!-- 连接池最大空闲 -->
	    <property name="maxIdle" value="${maxIdle}"></property>
	    <!-- 连接池最小空闲 -->
	    <property name="minIdle" value="${minIdle}"></property>
	    <!-- 获取连接最大等待时间 -->
	    <property name="maxWait" value="${maxWait}"></property>
	  </bean>

	<!-- 配置dao层接口的自动注入，单个配置-->
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<!-- 实现的接口 -->
		<property name="mapperInterface" value="dao.UserDao"></property>
		<!-- 执行sql语句所需的SqlSession的来源 -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 事务的 连接数据源信息 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 自动管理（扫描事务注解）-->
	<tx:annotation-driven/>
</beans>